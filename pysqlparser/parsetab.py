
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '4FBB4E4924213B022CBB818BD5DC55A1'
    
_lr_action_items = {'IDENTIFIER':([3,8,9,11,17,23,27,30,32,39,],[4,11,16,18,4,11,4,36,11,42,]),'NOT':([7,],[10,]),'DOT':([4,6,],[-5,9,]),'REFERENCES':([18,19,20,38,],[-16,-14,27,-15,]),'NUMBER':([25,],[33,]),'CREATE':([0,],[2,]),'$end':([1,29,43,],[0,-1,-2,]),'SEMICOLON':([21,41,],[29,43,]),'RPAREN':([12,13,15,18,19,20,28,31,33,34,36,37,38,40,42,44,],[21,-7,-6,-16,-14,-9,-10,-8,38,-11,40,41,-15,-12,44,-13,]),'COMMA':([15,18,19,20,28,34,38,44,],[23,-16,-14,-9,-10,-11,-15,-13,]),'PRIMARY':([8,18,19,20,23,32,38,],[14,-16,-14,26,14,14,-15,]),'TABLE':([2,],[3,]),'LPAREN':([4,5,16,18,19,22,24,35,],[-3,8,-4,-16,25,30,32,39,]),'KEY':([14,26,],[22,34,]),'EXISTS':([10,],[17,]),'IF':([3,],[7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'schema':([3,17,27,],[6,6,6,]),'table_definition':([0,],[1,]),'table_name':([3,17,27,],[5,24,35,]),'primary_key_definition':([8,23,32,],[13,13,13,]),'column_definitions':([8,23,32,],[12,31,37,]),'type':([11,],[19,]),'column_definition':([8,23,32,],[15,15,15,]),'data_type':([11,],[20,]),'reference_definition':([20,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> table_definition","S'",1,None,None,None),
  ('table_definition -> CREATE TABLE table_name LPAREN column_definitions RPAREN SEMICOLON','table_definition',7,'p_table_definition','ddlparser.py',91),
  ('table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON','table_definition',10,'p_table_definition','ddlparser.py',92),
  ('table_name -> IDENTIFIER','table_name',1,'p_table_name','ddlparser.py',104),
  ('table_name -> schema DOT IDENTIFIER','table_name',3,'p_table_name','ddlparser.py',105),
  ('schema -> IDENTIFIER','schema',1,'p_schema','ddlparser.py',116),
  ('column_definitions -> column_definition','column_definitions',1,'p_column_definitions','ddlparser.py',120),
  ('column_definitions -> primary_key_definition','column_definitions',1,'p_column_definitions','ddlparser.py',121),
  ('column_definitions -> column_definition COMMA column_definitions','column_definitions',3,'p_column_definitions','ddlparser.py',122),
  ('column_definition -> IDENTIFIER data_type','column_definition',2,'p_column_definition','ddlparser.py',135),
  ('column_definition -> IDENTIFIER data_type reference_definition','column_definition',3,'p_column_definition','ddlparser.py',136),
  ('column_definition -> IDENTIFIER data_type PRIMARY KEY','column_definition',4,'p_column_definition','ddlparser.py',137),
  ('primary_key_definition -> PRIMARY KEY LPAREN IDENTIFIER RPAREN','primary_key_definition',5,'p_primary_key_definition','ddlparser.py',148),
  ('reference_definition -> REFERENCES table_name LPAREN IDENTIFIER RPAREN','reference_definition',5,'p_reference_definition','ddlparser.py',152),
  ('data_type -> type','data_type',1,'p_data_type','ddlparser.py',158),
  ('data_type -> type LPAREN NUMBER RPAREN','data_type',4,'p_data_type','ddlparser.py',159),
  ('type -> IDENTIFIER','type',1,'p_type','ddlparser.py',167),
]
