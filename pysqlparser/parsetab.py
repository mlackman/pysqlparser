
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'E6D8B61000CC2641C6A78961DA28E93C'
    
_lr_action_items = {'IF':([3,],[4,]),'DOT':([6,7,],[-5,10,]),'RPAREN':([12,13,14,22,23,24,27,32,33,34,35,36,39,40,43,44,],[19,-7,-6,-16,-14,-9,-8,-10,38,39,40,-11,-12,-15,44,-13,]),'EXISTS':([8,],[11,]),'COMMA':([14,22,23,24,32,36,40,44,],[20,-16,-14,-9,-10,-11,-15,-13,]),'KEY':([15,30,],[21,36,]),'NOT':([4,],[8,]),'NUMBER':([29,],[35,]),'SEMICOLON':([19,38,],[26,42,]),'TABLE':([1,],[3,]),'PRIMARY':([9,20,22,23,24,25,40,],[15,15,-16,-14,30,15,-15,]),'CREATE':([0,],[1,]),'REFERENCES':([22,23,24,40,],[-16,-14,31,-15,]),'$end':([2,26,42,],[0,-1,-2,]),'IDENTIFIER':([3,9,10,11,16,20,25,28,31,41,],[6,16,17,6,22,16,16,34,6,43,]),'LPAREN':([5,6,17,18,21,22,23,37,],[9,-3,-4,25,28,-16,29,41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'column_definition':([9,20,25,],[14,14,14,]),'table_name':([3,11,31,],[5,18,37,]),'schema':([3,11,31,],[7,7,7,]),'column_definitions':([9,20,25,],[12,27,33,]),'primary_key_definition':([9,20,25,],[13,13,13,]),'reference_definition':([24,],[32,]),'table_definition':([0,],[2,]),'type':([16,],[23,]),'data_type':([16,],[24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> table_definition","S'",1,None,None,None),
  ('table_definition -> CREATE TABLE table_name LPAREN column_definitions RPAREN SEMICOLON','table_definition',7,'p_table_definition','ddlparser.py',91),
  ('table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON','table_definition',10,'p_table_definition','ddlparser.py',92),
  ('table_name -> IDENTIFIER','table_name',1,'p_table_name','ddlparser.py',104),
  ('table_name -> schema DOT IDENTIFIER','table_name',3,'p_table_name','ddlparser.py',105),
  ('schema -> IDENTIFIER','schema',1,'p_schema','ddlparser.py',116),
  ('column_definitions -> column_definition','column_definitions',1,'p_column_definitions','ddlparser.py',120),
  ('column_definitions -> primary_key_definition','column_definitions',1,'p_column_definitions','ddlparser.py',121),
  ('column_definitions -> column_definition COMMA column_definitions','column_definitions',3,'p_column_definitions','ddlparser.py',122),
  ('column_definition -> IDENTIFIER data_type','column_definition',2,'p_column_definition','ddlparser.py',135),
  ('column_definition -> IDENTIFIER data_type reference_definition','column_definition',3,'p_column_definition','ddlparser.py',136),
  ('column_definition -> IDENTIFIER data_type PRIMARY KEY','column_definition',4,'p_column_definition','ddlparser.py',137),
  ('primary_key_definition -> PRIMARY KEY LPAREN IDENTIFIER RPAREN','primary_key_definition',5,'p_primary_key_definition','ddlparser.py',148),
  ('reference_definition -> REFERENCES table_name LPAREN IDENTIFIER RPAREN','reference_definition',5,'p_reference_definition','ddlparser.py',152),
  ('data_type -> type','data_type',1,'p_data_type','ddlparser.py',158),
  ('data_type -> type LPAREN NUMBER RPAREN','data_type',4,'p_data_type','ddlparser.py',159),
  ('type -> IDENTIFIER','type',1,'p_type','ddlparser.py',167),
]
