Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> table_definition
Rule 1     table_definition -> CREATE TABLE table_name LPAREN column_definitions RPAREN SEMICOLON
Rule 2     table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON
Rule 3     table_name -> IDENTIFIER
Rule 4     table_name -> schema DOT IDENTIFIER
Rule 5     schema -> IDENTIFIER
Rule 6     column_definitions -> column_definition
Rule 7     column_definitions -> primary_key_definition
Rule 8     column_definitions -> column_definition COMMA column_definitions
Rule 9     column_definition -> IDENTIFIER data_type
Rule 10    column_definition -> IDENTIFIER data_type reference_definition
Rule 11    column_definition -> IDENTIFIER data_type PRIMARY KEY
Rule 12    primary_key_definition -> PRIMARY KEY LPAREN IDENTIFIER RPAREN
Rule 13    reference_definition -> REFERENCES table_name LPAREN IDENTIFIER RPAREN
Rule 14    data_type -> type
Rule 15    data_type -> type LPAREN NUMBER RPAREN
Rule 16    type -> IDENTIFIER

Terminals, with rules where they appear

COMMA                : 8
CREATE               : 1 2
DOT                  : 4
EXISTS               : 2
IDENTIFIER           : 3 4 5 9 10 11 12 13 16
IF                   : 2
KEY                  : 11 12
LPAREN               : 1 2 12 13 15
NOT                  : 2
NUMBER               : 15
PRIMARY              : 11 12
REFERENCES           : 13
RPAREN               : 1 2 12 13 15
SEMICOLON            : 1 2
TABLE                : 1 2
error                : 

Nonterminals, with rules where they appear

column_definition    : 6 8
column_definitions   : 1 2 8
data_type            : 9 10 11
primary_key_definition : 7
reference_definition : 10
schema               : 4
table_definition     : 0
table_name           : 1 2 13
type                 : 14 15

Parsing method: LALR

state 0

    (0) S' -> . table_definition
    (1) table_definition -> . CREATE TABLE table_name LPAREN column_definitions RPAREN SEMICOLON
    (2) table_definition -> . CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON

    CREATE          shift and go to state 2

    table_definition               shift and go to state 1

state 1

    (0) S' -> table_definition .



state 2

    (1) table_definition -> CREATE . TABLE table_name LPAREN column_definitions RPAREN SEMICOLON
    (2) table_definition -> CREATE . TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON

    TABLE           shift and go to state 3


state 3

    (1) table_definition -> CREATE TABLE . table_name LPAREN column_definitions RPAREN SEMICOLON
    (2) table_definition -> CREATE TABLE . IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON
    (3) table_name -> . IDENTIFIER
    (4) table_name -> . schema DOT IDENTIFIER
    (5) schema -> . IDENTIFIER

    IF              shift and go to state 7
    IDENTIFIER      shift and go to state 4

    table_name                     shift and go to state 5
    schema                         shift and go to state 6

state 4

    (3) table_name -> IDENTIFIER .
    (5) schema -> IDENTIFIER .

    LPAREN          reduce using rule 3 (table_name -> IDENTIFIER .)
    DOT             reduce using rule 5 (schema -> IDENTIFIER .)


state 5

    (1) table_definition -> CREATE TABLE table_name . LPAREN column_definitions RPAREN SEMICOLON

    LPAREN          shift and go to state 8


state 6

    (4) table_name -> schema . DOT IDENTIFIER

    DOT             shift and go to state 9


state 7

    (2) table_definition -> CREATE TABLE IF . NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON

    NOT             shift and go to state 10


state 8

    (1) table_definition -> CREATE TABLE table_name LPAREN . column_definitions RPAREN SEMICOLON
    (6) column_definitions -> . column_definition
    (7) column_definitions -> . primary_key_definition
    (8) column_definitions -> . column_definition COMMA column_definitions
    (9) column_definition -> . IDENTIFIER data_type
    (10) column_definition -> . IDENTIFIER data_type reference_definition
    (11) column_definition -> . IDENTIFIER data_type PRIMARY KEY
    (12) primary_key_definition -> . PRIMARY KEY LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 11
    PRIMARY         shift and go to state 14

    column_definitions             shift and go to state 12
    primary_key_definition         shift and go to state 13
    column_definition              shift and go to state 15

state 9

    (4) table_name -> schema DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 16


state 10

    (2) table_definition -> CREATE TABLE IF NOT . EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON

    EXISTS          shift and go to state 17


state 11

    (9) column_definition -> IDENTIFIER . data_type
    (10) column_definition -> IDENTIFIER . data_type reference_definition
    (11) column_definition -> IDENTIFIER . data_type PRIMARY KEY
    (14) data_type -> . type
    (15) data_type -> . type LPAREN NUMBER RPAREN
    (16) type -> . IDENTIFIER

    IDENTIFIER      shift and go to state 18

    type                           shift and go to state 19
    data_type                      shift and go to state 20

state 12

    (1) table_definition -> CREATE TABLE table_name LPAREN column_definitions . RPAREN SEMICOLON

    RPAREN          shift and go to state 21


state 13

    (7) column_definitions -> primary_key_definition .

    RPAREN          reduce using rule 7 (column_definitions -> primary_key_definition .)


state 14

    (12) primary_key_definition -> PRIMARY . KEY LPAREN IDENTIFIER RPAREN

    KEY             shift and go to state 22


state 15

    (6) column_definitions -> column_definition .
    (8) column_definitions -> column_definition . COMMA column_definitions

    RPAREN          reduce using rule 6 (column_definitions -> column_definition .)
    COMMA           shift and go to state 23


state 16

    (4) table_name -> schema DOT IDENTIFIER .

    LPAREN          reduce using rule 4 (table_name -> schema DOT IDENTIFIER .)


state 17

    (2) table_definition -> CREATE TABLE IF NOT EXISTS . table_name LPAREN column_definitions RPAREN SEMICOLON
    (3) table_name -> . IDENTIFIER
    (4) table_name -> . schema DOT IDENTIFIER
    (5) schema -> . IDENTIFIER

    IDENTIFIER      shift and go to state 4

    table_name                     shift and go to state 24
    schema                         shift and go to state 6

state 18

    (16) type -> IDENTIFIER .

    LPAREN          reduce using rule 16 (type -> IDENTIFIER .)
    PRIMARY         reduce using rule 16 (type -> IDENTIFIER .)
    REFERENCES      reduce using rule 16 (type -> IDENTIFIER .)
    COMMA           reduce using rule 16 (type -> IDENTIFIER .)
    RPAREN          reduce using rule 16 (type -> IDENTIFIER .)


state 19

    (14) data_type -> type .
    (15) data_type -> type . LPAREN NUMBER RPAREN

    PRIMARY         reduce using rule 14 (data_type -> type .)
    REFERENCES      reduce using rule 14 (data_type -> type .)
    COMMA           reduce using rule 14 (data_type -> type .)
    RPAREN          reduce using rule 14 (data_type -> type .)
    LPAREN          shift and go to state 25


state 20

    (9) column_definition -> IDENTIFIER data_type .
    (10) column_definition -> IDENTIFIER data_type . reference_definition
    (11) column_definition -> IDENTIFIER data_type . PRIMARY KEY
    (13) reference_definition -> . REFERENCES table_name LPAREN IDENTIFIER RPAREN

    COMMA           reduce using rule 9 (column_definition -> IDENTIFIER data_type .)
    RPAREN          reduce using rule 9 (column_definition -> IDENTIFIER data_type .)
    PRIMARY         shift and go to state 26
    REFERENCES      shift and go to state 27

    reference_definition           shift and go to state 28

state 21

    (1) table_definition -> CREATE TABLE table_name LPAREN column_definitions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 29


state 22

    (12) primary_key_definition -> PRIMARY KEY . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 30


state 23

    (8) column_definitions -> column_definition COMMA . column_definitions
    (6) column_definitions -> . column_definition
    (7) column_definitions -> . primary_key_definition
    (8) column_definitions -> . column_definition COMMA column_definitions
    (9) column_definition -> . IDENTIFIER data_type
    (10) column_definition -> . IDENTIFIER data_type reference_definition
    (11) column_definition -> . IDENTIFIER data_type PRIMARY KEY
    (12) primary_key_definition -> . PRIMARY KEY LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 11
    PRIMARY         shift and go to state 14

    column_definitions             shift and go to state 31
    column_definition              shift and go to state 15
    primary_key_definition         shift and go to state 13

state 24

    (2) table_definition -> CREATE TABLE IF NOT EXISTS table_name . LPAREN column_definitions RPAREN SEMICOLON

    LPAREN          shift and go to state 32


state 25

    (15) data_type -> type LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 33


state 26

    (11) column_definition -> IDENTIFIER data_type PRIMARY . KEY

    KEY             shift and go to state 34


state 27

    (13) reference_definition -> REFERENCES . table_name LPAREN IDENTIFIER RPAREN
    (3) table_name -> . IDENTIFIER
    (4) table_name -> . schema DOT IDENTIFIER
    (5) schema -> . IDENTIFIER

    IDENTIFIER      shift and go to state 4

    schema                         shift and go to state 6
    table_name                     shift and go to state 35

state 28

    (10) column_definition -> IDENTIFIER data_type reference_definition .

    COMMA           reduce using rule 10 (column_definition -> IDENTIFIER data_type reference_definition .)
    RPAREN          reduce using rule 10 (column_definition -> IDENTIFIER data_type reference_definition .)


state 29

    (1) table_definition -> CREATE TABLE table_name LPAREN column_definitions RPAREN SEMICOLON .

    $end            reduce using rule 1 (table_definition -> CREATE TABLE table_name LPAREN column_definitions RPAREN SEMICOLON .)


state 30

    (12) primary_key_definition -> PRIMARY KEY LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 36


state 31

    (8) column_definitions -> column_definition COMMA column_definitions .

    RPAREN          reduce using rule 8 (column_definitions -> column_definition COMMA column_definitions .)


state 32

    (2) table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN . column_definitions RPAREN SEMICOLON
    (6) column_definitions -> . column_definition
    (7) column_definitions -> . primary_key_definition
    (8) column_definitions -> . column_definition COMMA column_definitions
    (9) column_definition -> . IDENTIFIER data_type
    (10) column_definition -> . IDENTIFIER data_type reference_definition
    (11) column_definition -> . IDENTIFIER data_type PRIMARY KEY
    (12) primary_key_definition -> . PRIMARY KEY LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 11
    PRIMARY         shift and go to state 14

    column_definitions             shift and go to state 37
    primary_key_definition         shift and go to state 13
    column_definition              shift and go to state 15

state 33

    (15) data_type -> type LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 38


state 34

    (11) column_definition -> IDENTIFIER data_type PRIMARY KEY .

    COMMA           reduce using rule 11 (column_definition -> IDENTIFIER data_type PRIMARY KEY .)
    RPAREN          reduce using rule 11 (column_definition -> IDENTIFIER data_type PRIMARY KEY .)


state 35

    (13) reference_definition -> REFERENCES table_name . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 39


state 36

    (12) primary_key_definition -> PRIMARY KEY LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 40


state 37

    (2) table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions . RPAREN SEMICOLON

    RPAREN          shift and go to state 41


state 38

    (15) data_type -> type LPAREN NUMBER RPAREN .

    PRIMARY         reduce using rule 15 (data_type -> type LPAREN NUMBER RPAREN .)
    REFERENCES      reduce using rule 15 (data_type -> type LPAREN NUMBER RPAREN .)
    COMMA           reduce using rule 15 (data_type -> type LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 15 (data_type -> type LPAREN NUMBER RPAREN .)


state 39

    (13) reference_definition -> REFERENCES table_name LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 42


state 40

    (12) primary_key_definition -> PRIMARY KEY LPAREN IDENTIFIER RPAREN .

    RPAREN          reduce using rule 12 (primary_key_definition -> PRIMARY KEY LPAREN IDENTIFIER RPAREN .)


state 41

    (2) table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 43


state 42

    (13) reference_definition -> REFERENCES table_name LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 44


state 43

    (2) table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON .

    $end            reduce using rule 2 (table_definition -> CREATE TABLE IF NOT EXISTS table_name LPAREN column_definitions RPAREN SEMICOLON .)


state 44

    (13) reference_definition -> REFERENCES table_name LPAREN IDENTIFIER RPAREN .

    COMMA           reduce using rule 13 (reference_definition -> REFERENCES table_name LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 13 (reference_definition -> REFERENCES table_name LPAREN IDENTIFIER RPAREN .)

